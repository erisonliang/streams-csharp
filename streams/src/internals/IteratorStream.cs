//======================================================================================================================
namespace hhlogic.streams.internals {
//----------------------------------------------------------------------------------------------------------------------
using System;
//======================================================================================================================


//======================================================================================================================
public sealed class IteratorStream<T> : AbstractFilterStream<T>
{
  //--------------------------------------------------------------------------------------------------------------------
  private Predicate<Predicate<T>> supplier;
  private uint skipCount;
  //--------------------------------------------------------------------------------------------------------------------
  public IteratorStream(Predicate<Predicate<T>> supplier, uint skip)
  {
    this.supplier = supplier;
    this.skipCount = skip;
  }
  //--------------------------------------------------------------------------------------------------------------------
  public override bool forEachWhile(Predicate<T> f)
  {
    uint i = 0u;

    return supplier(v =>
    {
      if(i >= skipCount)
        return f(v);

      i++;
      return true;
    });
  }
  //--------------------------------------------------------------------------------------------------------------------
  public override Maybe<T> head()
  {
    Maybe<T> value = Maybe<T>.nothing;

    forEachWhile(v =>
    {
      value = Maybe.of(v);
      return false;
    });

    return value;
  }
  //--------------------------------------------------------------------------------------------------------------------
  public override Stream<T> tail()
  {
    return new IteratorStream<T>(supplier, skipCount + 1);
  }
  //--------------------------------------------------------------------------------------------------------------------
  public override Maybe<uint> fastCount()
  {
    return Maybe<uint>.nothing;
  }
  //--------------------------------------------------------------------------------------------------------------------
}
//======================================================================================================================


//======================================================================================================================
} // End Namespace
//======================================================================================================================
